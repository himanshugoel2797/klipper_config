#[include KAMP_Settings.cfg]
[include mmu/base/*.cfg]
[include mmu/optional/client_macros.cfg]
#[include mmu/optional/mmu_ercf_cutter.cfg]
[include mainsail.cfg]
[include timelapse.cfg]
#[include pis.cfg]
#[include ebb_is.cfg]
[include thr_is.cfg]


[mcu]
canbus_uuid: 2e1a0a42ef75


[mcu toolhead]
canbus_uuid: 139bae4f9cb0

[board_pins toolhead]
mcu: toolhead
aliases:
  TOOLHEAD_SENSOR=gpio29,  

[mcu mmb]
canbus_uuid: d6c0aea18851

[board_pins mmb]
mcu: mmb
aliases:
  MMU_SEL_UART=PA10,
  MMU_SEL_STEP=PB15,
  MMU_SEL_DIR=PB14,
  MMU_SEL_ENABLE=PB8,
  MMU_SEL_DIAG=PA3,
  MMU_GEAR_UART=PC7,
  MMU_GEAR_STEP=PD2,
  MMU_GEAR_DIR=PB13,
  MMU_GEAR_ENABLE=PD1,
  MMU_GEAR_DIAG=PA4,
  MMU_SEL_ENDSTOP=PC15,
  BELAY_SENSOR=PC3,
  MMU_SERVO=PA0,
  MMU_ENCODER=PA1,



[stepper_x]
step_pin: PB10
dir_pin: PB11
enable_pin: !PG0
microsteps: 64
rotation_distance: 40
endstop_pin: ^toolhead:gpio24 #tmc5160_stepper_x:virtual_endstop 
position_endstop: 256
position_max: 256
position_min: -12
homing_speed: 100
homing_retract_dist: 0
min_home_dist: 20

[tmc5160 stepper_x]
cs_pin: PE15
diag0_pin: ^!PG1
spi_bus: spi4
sense_resistor: 0.075
interpolate: false
run_current: 1.2
home_current: 0.4
#driver_SGT: 1

[stepper_y]
step_pin: PF15
dir_pin: PF14
enable_pin: !PE9
microsteps: 64
rotation_distance: 40
endstop_pin: tmc5160_stepper_y:virtual_endstop #^PC2
position_min: -7
position_endstop: -6
position_max: 255
homing_speed: 50
homing_retract_dist: 0
min_home_dist: 20

[tmc5160 stepper_y]
cs_pin: PE11
diag0_pin: ^!PE10
spi_bus: spi4
sense_resistor: 0.075
interpolate: false
run_current: 1.2
home_current: 0.4
driver_SGT: 1

[stepper_z]
step_pin: PC9
dir_pin: PC8
enable_pin: !PC10
microsteps: 16
rotation_distance: 4
endstop_pin: probe:z_virtual_endstop
#position_endstop: 0
position_max: 300
position_min: -10
homing_speed: 8
#second_homing_speed: 8
#homing_retract_speed: 30
homing_retract_dist: 0

[tmc2209 stepper_z]
interpolate: false
uart_pin: PA8
run_current: 1.0
sense_resistor: 0.110

[stepper_z1]
step_pin: PG7
dir_pin: PG6
enable_pin: !PC7
microsteps: 16
rotation_distance: 4

[tmc2209 stepper_z1]
interpolate: false
uart_pin: PG8
run_current: 1.0
sense_resistor: 0.110

[stepper_z2]
step_pin: PD10
dir_pin: PD9
enable_pin: !PD13
microsteps: 16
rotation_distance: 4

[tmc2209 stepper_z2]
interpolate: false
uart_pin: PD11
run_current: 1.0
sense_resistor: 0.110

[extruder]
max_extrude_only_distance: 500.0
step_pin: toolhead:gpio5
dir_pin: toolhead:gpio4
enable_pin: !toolhead:gpio10
microsteps: 16
full_steps_per_rotation: 200
rotation_distance: 22.67895 #4.603993903555
gear_ratio:50:10
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: toolhead:gpio0
sensor_type: PT1000
pullup_resistor: 4583
sensor_pin: toolhead:gpio26
pressure_advance: 0.03
pressure_advance_smooth_time: 0.04
#control: pid
# tuned for stock hardware with 200 degree Celsius target
#pid_Kp: 21.527
#pid_Ki: 1.063
#pid_Kd: 108.982
min_temp: 0
max_temp: 300
min_extrude_temp: 170
max_extrude_cross_section: 100.0
endstop_pin: tmc2209_extruder:virtual_endstop

[tmc2209 extruder]
interpolate: true
uart_pin:toolhead:gpio6
diag_pin:toolhead:gpio7
run_current: 0.6
#diag_pin: 
driver_SGTHRS: 100

[beacon]
serial: /dev/serial/by-id/usb-Beacon_Beacon_RevH_DEB93F655154364134202020FF153523-if00
x_offset: 0 # update with offset from nozzle on your machine
y_offset: 37 # update with offset from nozzle on your machine
mesh_main_direction: x
z_settling_time: 400
mesh_runs: 2
home_xy_position: 127.5, 127.5
home_z_hop: 5
home_z_hop_speed: 3
home_xy_move_speed: 200
home_method: contact
home_method_when_homed: proximity
home_autocalibrate: unhomed
autocal_speed: 4
autocal_retract_speed: 10

[axis_twist_compensation]
calibrate_start_x: 50
calibrate_end_x: 200
calibrate_y: 127.5
#[safe_z_home]
#home_xy_position: 127.5, 127.5
#z_hop: 3

[z_tilt]
z_positions:
 127.5, 245
 10, 10
 245, 10
#   A list of X, Y coordinates (one per line; subsequent lines
#   indented) describing the location of each bed "pivot point". The
#   "pivot point" is the point where the bed attaches to the given Z
#   stepper. It is described using nozzle coordinates (the X, Y position
#   of the nozzle if it could move directly above the point). The
#   first entry corresponds to stepper_z, the second to stepper_z1,
#   the third to stepper_z2, etc. This parameter must be provided.
points:
  #125, 180
  #129, 180
  #26, 200
  127.5, 200
  #230, 200
  245, 0
  20, 10

#   A list of X, Y coordinates (one per line; subsequent lines
#   indented) that should be probed during a Z_TILT_ADJUST command.
#   Specify coordinates of the nozzle and be sure the probe is above
#   the bed at the given nozzle coordinates. This parameter must be
#   provided.
speed: 700
#   The speed (in mm/s) of non-probing moves during the calibration.
#   The default is 50.
horizontal_move_z: 5 #30
#   The height (in mm) that the head should be commanded to move to
#   just prior to starting a probe operation. The default is 5.
retries: 5
#   Number of times to retry if the probed points aren't within
#   tolerance.
retry_tolerance: 0.025
#   If retries are enabled then retry if largest and smallest probed
#   points differ more than retry_tolerance. Note the smallest unit of
#   change here would be a single step. However if you are probing
#   more points than steppers then you will likely have a fixed
#   minimum value for the range of probed points which you can learn
#   by observing command output.

[idle_timeout]
timeout: 3600

[bed_mesh]
speed: 700
horizontal_move_z: 3 #30
mesh_min: 20, 35
mesh_max: 240, 200
probe_count: 50, 50
algorithm: bicubic
move_check_distance: 3
split_delta_z: .025
zero_reference_position: 127.5, 127.5
faulty_region_1_min: 0,0
faulty_region_1_max: 30, 10

[input_shaper]
shaper_freq_x: 65.4 #95.4 #65.0
shaper_type_x: mzv #3hump_ei #mzv
damping_ratio_x: 0.059 #0.027 #0.056
shaper_freq_y: 66.4 #70.2 #45.4
shaper_type_y: mzv #ei #mzv
damping_ratio_y: 0.038 #0.074 #0.066

[exclude_object]

[heater_bed]
heater_pin: PG11
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA2
pullup_resistor: 2200
#control: pid
# tuned for stock hardware with 50 degree Celsius target
#pid_Kp: 54.027
#pid_Ki: 0.770
#pid_Kd: 948.182
min_temp: 0
max_temp: 130

#[temperature_sensor EBB36]
#sensor_type: temperature_mcu
#sensor_mcu: EBBCan

[temperature_fan RPi]
sensor_type: temperature_host
pin: PF9
control: watermark
min_temp: 0
max_temp: 100
target_temp: 65.0
max_delta: 5.0

[temperature_sensor Leviathan]
sensor_type: temperature_mcu
sensor_mcu: mcu

#[temperature_fan Toolhead]
#sensor_type: temperature_mcu
#sensor_mcu: toolhead
#pin: toolhead:gpio1
#control: watermark
#min_temp: 0
#max_temp: 90
#target_temp: 60.0

[temperature_sensor Enclosure]
sensor_type: EPCOS 100K B57560G104F
sensor_pin: mcu:PA3
pullup_resistor: 2200

[multi_pin stepper_fans]
pins: mcu:PF7, mcu:PB3

[controller_fan stepper_fan]
pin: multi_pin:stepper_fans
stepper: stepper_x, stepper_y, stepper_z, stepper_z1, stepper_z2

#[fan]
#pin: toolhead:gpio2
#max_power: 1.0

[heater_fan hotend_fan]
pin: toolhead:gpio1
heater: extruder
heater_temp: 50.0

#[fan_generic static_cooling]
#pin: mcu:PB3

#[fan_generic bentobox]
#pin: mcu:PF7

[multi_pin hotend_fans]
pins: toolhead:gpio2, toolhead:gpio3


# instead of using [fan], we define the default part cooling fan with [fan_generic] here
# this is the default part cooling fan
[fan_generic fan0]
pin: mcu:PB7
max_power: 0.8
shutdown_speed: 0
cycle_time: 0.005
kick_start_time: 0.05
off_below: 0.1
#cycle_time: 0.01
#hardware_pwm: false

# this is the auxiliary fan
# comment out it if you don't have auxiliary fan
#[fan_generic fan2]
#pin: mcu:PB3
#cycle_time: 0.01
#hardware_pwm: false

# this is the exhaust fan
# comment out it if you don't have exhaust fan
#[fan_generic fan3]
#pin: mcu:PB7
#cycle_time: 0.01
#hardware_pwm: false

[gcode_macro M106]
gcode:
    {% set fan = 'fan' + (params.P|int if params.P is defined else 0)|string %}
    {% set speed = (params.S|float / 255 if params.S is defined else 1.0) %}
    SET_FAN_SPEED FAN={fan} SPEED={speed}
    ;{% if fan == "fan0" %}
    ;  SET_FAN_SPEED FAN="fan2" SPEED={speed}
    ;{% endif %}

[neopixel chamber]
pin: mcu:PF10
chain_count: 150
color_order: GRB
initial_RED: 1.0
initial_GREEN: 1.0
initial_BLUE: 1.0

[neopixel hotend_lights]
pin: toolhead:gpio20
chain_count: 2
color_order: GRB
initial_RED: 0.6
initial_GREEN: 0.6
initial_BLUE: 0.6

[printer]
kinematics: corexy
max_velocity: 700
#max_x_accel: 20000
#max_y_accel: 10000
max_accel: 10000
max_z_velocity: 50
max_z_accel: 100
square_corner_velocity: 5.0

[force_move]
# Enable commands that force potentially unsafe movement
enable_force_move: True

[gcode_macro START_PRINT]
description: Called when starting print
gcode:
    {% set REFERENCED_TOOLS = params.REFERENCED_TOOLS|default("")|string %}
    {% set INITIAL_TOOL = params.INITIAL_TOOL|default(0)|int %}
    {% set BED_TEMP = params.BED_TEMP|default(0)|int %}
    {% set CHAMBER_TEMP = params.CHAMBER_TEMP|default(0)|int %}
    {% set NOZZLE_TEMP = params.NOZZLE_TEMP|default(0)|int %}

    {% if REFERENCED_TOOLS == "!referenced_tools!" %}
        RESPOND MSG="Happy Hare gcode pre-processor is disabled"
        {% set REFERENCED_TOOLS = INITIAL_TOOL %}
    {% elif REFERENCED_TOOLS == "" %}
        RESPOND MSG="Happy Hare single color print"
        {% set REFERENCED_TOOLS = INITIAL_TOOL %}
    {% endif %}

    UPDATE_DELAYED_GCODE ID=STOP_FAN DURATION=0

    G90 ; use absolute coordinates
    M83 ; extruder relative mode
    ;M140 S[bed_temperature_initial_layer] ; set final bed temp
    M140 S{BED_TEMP}
    M109 S140 ; set temporary nozzle temp to prevent oozing during homing
    G4 S10 ; allow partial nozzle warmup
    BED_MESH_CLEAR
    SET_GCODE_OFFSET Z=0.0
    G28 METHOD=CONTACT CALIBRATE=0
    BRUSH_NOZZLE
    G0 Z2 ; position beacon at 2mm for heat soak
    
    {% if CHAMBER_TEMP > 0 %}
      RESPOND MSG="Waiting for chamber temperature"
      #SET_FAN_SPEED FAN=fan3 SPEED=1
      TEMPERATURE_WAIT SENSOR="temperature_sensor Enclosure" MINIMUM={CHAMBER_TEMP}
    {% endif %}
    ;M190 S[bed_temperature_initial_layer] ; wait for bed temp to stabilize
    M190 S{BED_TEMP}

    G28 Z METHOD=CONTACT CALIBRATE=1
    Z_TILT_ADJUST
    ;CALIBRATE_Z
    BED_MESH_CALIBRATE ADAPTIVE=1
    ;BED_MESH_CALIBRATE PROFILE=default MESH_MIN={first_layer_print_min[0]},{max(50, first_layer_print_min[1])} MESH_MAX={first_layer_print_max[0]},{min(200, first_layer_print_max[1])}
    ;BED_MESH_CALIBRATE PROFILE=default MESH_MIN={params.PRINT_BOUNDS[0]},{[50, params.PRINT_BOUNDS[1]]|max} MESH_MAX={params.PRINT_BOUNDS[2]},{[200, params.PRINT_BOUNDS[3]]|min}
    BRUSH_NOZZLE
    G28 Z METHOD=CONTACT CALIBRATE=0
    
    G1 Z5 F240
    G1 X255 Y10 F3000

    M104 S{NOZZLE_TEMP} ; set final nozzle temp
    M109 S{NOZZLE_TEMP} ; wait for nozzle temp to stabilize

    SET_GCODE_OFFSET Z=0.08

    _MMU_PRINT_START
    #MMU_CHECK_GATE TOOLS={REFERENCED_TOOLS}
    #MMU_CHANGE_TOOL STANDALONE=1 TOOL={INITIAL_TOOL} # Optional: load initial tool

    ;ZEROG_PURGE ;Disable purge due to addition of purge bucket

[gcode_macro TOOLCHANGE]
description: Called when changing filament
gcode:
    M104 S{params.NOZZLE_TEMP} ; set next filament temps
    M140 S{params.BED_TEMP}

    T{params.NEXT_TOOL} ; change tool

    M109 S{params.NOZZLE_TEMP} ; wait for next filament temps to stabilize
    M190 S{params.BED_TEMP}

[gcode_macro END_PRINT]
description: Called when ending print
gcode:
    {% set MAX_LAYER_Z = params.MAX_LAYER_Z|default(200)|int %}
    {% set PRINTABLE_HEIGHT = printer.toolhead.axis_maximum.z*0.8%}

    {% if MAX_LAYER_Z < PRINTABLE_HEIGHT %} 
        G1 Z{[MAX_LAYER_Z+2, PRINTABLE_HEIGHT]|min} F600 ; Move print head up{endif}
    {% endif %}

    #UPDATE_DELAYED_GCODE ID=STOP_FAN DURATION=1800 ; 30 minutes
    ;{if max_layer_z < printable_height-10}G1 Z{min(max_layer_z+70, printable_height-10)} F600 ; Move print head further up{endif}
    ;{if max_layer_z < printable_height*0.6}G1 Z{printable_height*0.6} F600 ; Move print head further up{endif}
    #MMU_EJECT
    M140 S0 ; turn off heatbed
    M104 S0 ; turn off temperature
    M107 ; turn off fan
    BRUSH_NOZZLE
    G1 X5 Y{printer.toolhead.axis_maximum.y*0.8} F6000 ; present print
    ;M84 X Y E ; disable motors
    

[delayed_gcode STOP_FAN]
gcode:
  SET_FAN_SPEED FAN=fan3 SPEED=0

[gcode_macro _MMU_LOAD_SEQUENCE_STALLGUARD]
description: Called when MMU is asked to load filament
gcode:
    {% set length = params.LENGTH|float %}
    {% set full = params.FULL|int %}
    {% set skip_extruder = params.SKIP_EXTRUDER|int %}
    {% set extruder_only = params.EXTRUDER_ONLY|int %}

    {% if extruder_only %}
        _MMU_STEP_HOMING_MOVE ENDSTOP=mmu_ext_touch MOVE=100 MOTOR=extruder
        _MMU_STEP_SET_FILAMENT STATE=10	# FILAMENT_POS_LOADED
    {% else %}
        _MMU_STEP_LOAD_GATE
        _MMU_STEP_LOAD_BOWDEN LENGTH={length}
        {% if full and not skip_extruder %}
            _MMU_STEP_HOMING_MOVE ENDSTOP=mmu_ext_touch MOVE=100 MOTOR=gear+extruder
            _MMU_STEP_SET_FILAMENT STATE=10	# FILAMENT_POS_LOADED
        {% endif %}
    {% endif %}

[gcode_macro BRUSH_NOZZLE]
# heat nozzle for best results
variable_brushpos_x: -10
variable_brushpos_y: 85
variable_brushwidth: 0
variable_brushheight: 30
gcode:
    ;M400  ;wait for buffer to clear
    {% if "xy" not in printer.toolhead.homed_axes %}
        G28         ;home axes before travel moves
    {% endif %}

    G90
    G1 X{brushpos_x} Y{brushpos_y} F5000  ;left position
    
    RESPOND MSG="Brushing Nozzle"
    G1 X{brushpos_x + brushwidth / 2} Y{brushpos_y + brushheight / 2} F5000
    G1 X{brushpos_x - brushwidth / 2} Y{brushpos_y - brushheight / 2} F2000
    G1 X{brushpos_x + brushwidth / 2} Y{brushpos_y + brushheight / 2} F2000
    G1 X{brushpos_x - brushwidth / 2} Y{brushpos_y - brushheight / 2} F2000
    G1 X{brushpos_x + brushwidth / 2} Y{brushpos_y + brushheight / 2} F2000
    RESPOND MSG="Nozzle Cleaned"

[gcode_macro PURGE_NOZZLE]
description: Purges filament into bucket
variable_purge_amount: 50
gcode:
    ;MMU_ACTION_CHANGED_CUSTOM ACTION="Purging"
    G1 X-12 Y120 F6000;move to bucket
    MMU_SYNC_GEAR_MOTOR SYNC=1 SERVO=1
    ;MMU_ACTION_CHANGED_CUSTOM ACTION="Idle"
    G1 E{purge_amount} F1000
    BRUSH_NOZZLE

[gcode_macro MMU_ACTION_CHANGED_CUSTOM]
description: Called when an action has changed
variable_last_led_r: 0
variable_last_led_g: 0
variable_last_led_b: 0
gcode:
    {% set ACTION = params.ACTION|string %}
    {% set OFF_ACTIONS = ["Loading", "Unloading", "Selecting", "Checking", "Purging"] %}
    {% set RESTORE_ACTIONS = ["Idle"] %}
    
    {% if ACTION in OFF_ACTIONS %}
        #Turn off LEDs
        SET_GCODE_VARIABLE MACRO=MMU_ACTION_CHANGED_CUSTOM VARIABLE=last_led_r VALUE={printer["neopixel chamber"].color_data[0][0]}
        SET_GCODE_VARIABLE MACRO=MMU_ACTION_CHANGED_CUSTOM VARIABLE=last_led_g VALUE={printer["neopixel chamber"].color_data[1][0]}
        SET_GCODE_VARIABLE MACRO=MMU_ACTION_CHANGED_CUSTOM VARIABLE=last_led_b VALUE={printer["neopixel chamber"].color_data[2][0]}
        SET_LED LED=chamber RED=0 GREEN=0 BLUE=0
        G4 P1000
    {% elif ACTION in RESTORE_ACTIONS %}
        #Restore last state of LEDs
        G4 P1000
        SET_LED LED=chamber RED={last_led_r} GREEN={last_led_g} BLUE={last_led_b}
    {% endif %} 

[endstop_phase]

[gcode_arcs]
resolution: 0.25

[resonance_tester]
accel_chip: beacon
probe_points: 127.5,127.5,20

[shaketune]
     # result_folder: ~/printer_data/config/ShakeTune_results
     #    The folder where the results will be stored. It will be created if it doesn't exist.
     # number_of_results_to_keep: 3
     #    The number of results to keep in the result_folder. The oldest results will
     #    be automatically deleted after each runs.
     # keep_raw_csv: False
     #    If True, the raw CSV files will be kept in the result_folder alongside the
     #    PNG graphs. If False, they will be deleted and only the graphs will be kept.
     # show_macros_in_webui: True
     #    Mainsail and Fluidd doesn't create buttons for "system" macros that are not in the
     #    printer.cfg file. If you want to see the macros in the webui, set this to True.
     # timeout: 300
     #    The maximum time in seconds to let Shake&Tune process the CSV files and generate the graphs.

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid_v
#*# pid_kp = 26.561
#*# pid_ki = 1.645
#*# pid_kd = 107.195
#*# pid_version = 1
#*# pid_target = 260.00
#*# pid_tolerance = 0.0200
#*#
#*# [probe]
#*# z_offset = 0
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 48.978
#*# pid_ki = 3.401
#*# pid_kd = 176.319
#*#
#*# [beacon model default_0]
#*# model_coef = 1.7092902959546559,
#*# 	1.9734660839603704,
#*# 	0.7354156333896946,
#*# 	0.48679766369557553,
#*# 	0.03485446309585932,
#*# 	-0.4703574606056967,
#*# 	0.08750394018754318,
#*# 	0.6522094843020284,
#*# 	0.035718158018711976,
#*# 	-0.23834851576582688
#*# model_domain = 1.911305755614617e-07,1.9438745138623067e-07
#*# model_range = 0.200000,5.000000
#*# model_temp = 39.496464
#*# model_offset = 0.00000
#*#
#*# [beacon model bambu_0_dualtextured_pla]
#*# model_coef = 1.674890540951974,
#*# 	2.0375531961028512,
#*# 	0.79187527185026,
#*# 	0.22126154801860853,
#*# 	-0.10320509875969994,
#*# 	0.05541924544567869,
#*# 	0.2957849894282358,
#*# 	0.1301474340772457,
#*# 	-0.05838507561069973,
#*# 	-0.041888778833823324
#*# model_domain = 1.8828957384251685e-07,1.9379569068480413e-07
#*# model_range = 0.200000,5.000000
#*# model_temp = 38.129144
#*# model_offset = 0.1
#*#
#*# [beacon model fysetc_textured_asa]
#*# model_coef = 1.7052594130077177,
#*# 	2.0650496677690136,
#*# 	0.7886136938130488,
#*# 	0.35048698590804944,
#*# 	-0.03573082152280018,
#*# 	-0.396461092171212,
#*# 	0.11501785063477842,
#*# 	0.6150888424275472,
#*# 	0.02713046445958628,
#*# 	-0.23203481197863768
#*# model_domain = 1.8956734849464033e-07,1.9402889419179185e-07
#*# model_range = 0.200000,5.000000
#*# model_temp = 71.767962
#*# model_offset = 0.45000
